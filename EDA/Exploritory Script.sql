
----Race Context
--SELECT  DISTINCT
--		R.DATE,
--		--R.RACEID,
--		R.NAME AS RACE_NAME,
--		R.ROUND,
--		--C.CIRCUITID,
--		C.CIRCUITREF,
--		C.NAME AS CIRCUIT_NAME,
--		C.LOCATION,
--		C.COUNTRY,
--		S.YEAR AS SEASON
--FROM RACES R
--LEFT JOIN CIRCUITS C
--ON R.CIRCUITID = C.CIRCUITID
--LEFT JOIN SEASONS S
--ON R.YEAR = S.YEAR
--ORDER BY R.DATE


--Races Mercedes won each season
SELECT	R.YEAR AS SEASON, 
		COUNT(*) AS MERCEDES_WINS,
		(SELECT COUNT(*) 
		    FROM RACES R2
		    WHERE R2.YEAR = R.YEAR) AS NUMBER_OF_RACES
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'Mercedes' AND RE.POSITION = 1
GROUP BY R.YEAR
ORDER BY R.YEAR

SELECT * FROM DRIVERS

--Mercedes Drivers 
SELECT	CON.NAME AS CONSTRUCTOR_NAME,
		CONCAT(D.FORENAME, ' ', D.SURNAME) AS DRIVER_NAME,
		MAX(R.YEAR) AS LATEST_RACE_YEAR,
		DATEDIFF(YEAR, D.DOB, MAX(R.DATE)) AS AGE_AT_LAST_RACE
FROM RESULTS RE
JOIN CONSTRUCTORS CON ON RE.CONSTRUCTORID = CON.CONSTRUCTORID
JOIN DRIVERS D ON RE.DRIVERID = D.DRIVERID 
JOIN RACES R ON RE.RACEID = R.RACEID
WHERE CON.NAME = 'Mercedes'
GROUP BY CON.NAME, D.DRIVERID, D.FORENAME, D.SURNAME, D.DOB
ORDER BY LATEST_RACE_YEAR DESC;

--Mercedes' Races won per driver
SELECT	CONCAT(D.FORENAME, ' ', D.SURNAME) AS DRIVER_NAME,
		COUNT(*) AS WINS
FROM RESULTS RE
JOIN CONSTRUCTORS C 
ON RE.CONSTRUCTORID = C.CONSTRUCTORID
JOIN DRIVERS D 
ON RE.DRIVERID = D.DRIVERID
WHERE C.NAME = 'Mercedes' AND RE.POSITION = 1
GROUP BY CONCAT(D.FORENAME, ' ', D.SURNAME)
ORDER BY WINS DESC;

--Mercedes points scored per season
SELECT	R.YEAR, 
		SUM(CONVERT(decimal, RE.POINTS)) AS TOTAL_POINTS,
		(SELECT COUNT(*) 
		    FROM RACES R2
		    WHERE R2.YEAR = R.YEAR) AS NUMBER_OF_RACES
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'Mercedes'
GROUP BY R.YEAR
ORDER BY R.YEAR;


--Mercedes Points Per Season, Win/Loss
WITH ConstructorPoints AS (
    SELECT 
        R.YEAR,
        C.NAME AS CONSTRUCTOR_NAME,
        SUM(CONVERT(decimal, RE.POINTS)) AS TOTAL_POINTS
    FROM RESULTS RE
    JOIN RACES R ON RE.RACEID = R.RACEID
    JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
    GROUP BY R.YEAR, C.NAME
),
MaxPointsPerYear AS (
    SELECT 
        YEAR,
        MAX(TOTAL_POINTS) AS MAX_POINTS
    FROM ConstructorPoints
    GROUP BY YEAR
)
SELECT 
    CP.YEAR,
    CP.TOTAL_POINTS,
    (SELECT COUNT(*) FROM RACES R2 WHERE R2.YEAR = CP.YEAR) AS NUMBER_OF_RACES,
    CASE 
        WHEN CP.TOTAL_POINTS = MP.MAX_POINTS THEN 'Won'
        ELSE 'Lost'
    END AS RESULT
FROM ConstructorPoints CP
JOIN MaxPointsPerYear MP ON CP.YEAR = MP.YEAR
WHERE CP.CONSTRUCTOR_NAME = 'Mercedes'
ORDER BY CP.YEAR;


SELECT  R.YEAR, 
		AVG(RE.POSITIONORDER) AS AVG_FINISH_POSITION
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'Mercedes'
GROUP BY R.YEAR
ORDER BY R.YEAR;






--SELECT  CON.NAME AS CONSTRUCTOR_NAME,
--		--CONCAT(D.FORENAME, ' ',D.SURNAME), 
--		RE.POSITION AS STARTING_POSITION,
--		RE.POINTS,
--		RE.LAPS,
--		RE.MILLISECONDS AS TIME_IN_MILLISECONDS,
--		R.DATE,
--		R.NAME AS RACE_NAME,
--		R.ROUND,
--		C.CIRCUITREF,
--		C.NAME AS CIRCUIT_NAME,
--		C.LOCATION,
--		C.COUNTRY,
--		S.YEAR AS SEASON
--FROM RESULTS RE
--LEFT JOIN CONSTRUCTORS CON
--ON RE.CONSTRUCTORID = CON.CONSTRUCTORID
--LEFT JOIN DRIVERS D
--ON RE.DRIVERID = D.DRIVERID
--LEFT JOIN RACES R
--ON RE.RACEID = R.RACEID
--LEFT JOIN CIRCUITS C
--ON R.CIRCUITID = C.CIRCUITID
--LEFT JOIN SEASONS S
--ON R.YEAR = S.YEAR
--ORDER BY S.YEAR, R.ROUND


