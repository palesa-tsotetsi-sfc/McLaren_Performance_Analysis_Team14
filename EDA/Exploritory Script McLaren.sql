
----Race Context
--SELECT  DISTINCT
--		R.DATE,
--		--R.RACEID,
--		R.NAME AS RACE_NAME,
--		R.ROUND,
--		--C.CIRCUITID,
--		C.CIRCUITREF,
--		C.NAME AS CIRCUIT_NAME,
--		C.LOCATION,
--		C.COUNTRY,
--		S.YEAR AS SEASON
--FROM RACES R
--LEFT JOIN CIRCUITS C
--ON R.CIRCUITID = C.CIRCUITID
--LEFT JOIN SEASONS S
--ON R.YEAR = S.YEAR
--ORDER BY R.DATE


--Races McLaren won each season
SELECT	R.YEAR AS SEASON, 
		COUNT(*) AS McLaren_WINS,
		(SELECT COUNT(*) 
		    FROM RACES R2
		    WHERE R2.YEAR = R.YEAR) AS NUMBER_OF_RACES
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'McLaren' AND RE.POSITION = 1
GROUP BY R.YEAR
ORDER BY R.YEAR

SELECT * FROM DRIVERS

--McLaren Drivers 
SELECT	CON.NAME AS CONSTRUCTOR_NAME,
		CONCAT(D.FORENAME, ' ', D.SURNAME) AS DRIVER_NAME,
		MAX(R.YEAR) AS LATEST_RACE_YEAR,
		DATEDIFF(YEAR, D.DOB, MAX(R.DATE)) AS AGE_AT_LAST_RACE
FROM RESULTS RE
JOIN CONSTRUCTORS CON ON RE.CONSTRUCTORID = CON.CONSTRUCTORID
JOIN DRIVERS D ON RE.DRIVERID = D.DRIVERID 
JOIN RACES R ON RE.RACEID = R.RACEID
WHERE CON.NAME = 'McLaren'
GROUP BY CON.NAME, D.DRIVERID, D.FORENAME, D.SURNAME, D.DOB
ORDER BY LATEST_RACE_YEAR DESC;

--McLaren' Races won per driver
SELECT	CONCAT(D.FORENAME, ' ', D.SURNAME) AS DRIVER_NAME,
		COUNT(*) AS WINS
FROM RESULTS RE
JOIN CONSTRUCTORS C 
ON RE.CONSTRUCTORID = C.CONSTRUCTORID
JOIN DRIVERS D 
ON RE.DRIVERID = D.DRIVERID
WHERE C.NAME = 'McLaren' AND RE.POSITION = 1
GROUP BY CONCAT(D.FORENAME, ' ', D.SURNAME)
ORDER BY WINS DESC;

--McLaren points scored per season
SELECT	R.YEAR, 
		SUM(CONVERT(decimal, RE.POINTS)) AS TOTAL_POINTS,
		(SELECT COUNT(*) 
		    FROM RACES R2
		    WHERE R2.YEAR = R.YEAR) AS NUMBER_OF_RACES
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'McLaren'
GROUP BY R.YEAR
ORDER BY R.YEAR;


--McLaren Points Per Season, Win/Loss
WITH ConstructorPoints AS (
    SELECT 
        R.YEAR,
        C.NAME AS CONSTRUCTOR_NAME,
        SUM(CONVERT(decimal, RE.POINTS)) AS TOTAL_POINTS
    FROM RESULTS RE
    JOIN RACES R ON RE.RACEID = R.RACEID
    JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
    GROUP BY R.YEAR, C.NAME
),
MaxPointsPerYear AS (
    SELECT 
        YEAR,
        MAX(TOTAL_POINTS) AS MAX_POINTS
    FROM ConstructorPoints
    GROUP BY YEAR
)
SELECT 
    CP.YEAR,
    CP.TOTAL_POINTS,
    (SELECT COUNT(*) FROM RACES R2 WHERE R2.YEAR = CP.YEAR) AS NUMBER_OF_RACES,
    CASE 
        WHEN CP.TOTAL_POINTS = MP.MAX_POINTS THEN 'Won'
        ELSE 'Lost'
    END AS RESULT
FROM ConstructorPoints CP
JOIN MaxPointsPerYear MP ON CP.YEAR = MP.YEAR
WHERE CP.CONSTRUCTOR_NAME = 'McLaren'
ORDER BY CP.YEAR;

--Average finishing position for McLaren drivers
SELECT  R.YEAR, 
		AVG(RE.POSITIONORDER) AS AVG_FINISH_POSITION
FROM RESULTS RE
JOIN RACES R ON RE.RACEID = R.RACEID
JOIN CONSTRUCTORS C ON RE.CONSTRUCTORID = C.CONSTRUCTORID
WHERE C.NAME = 'McLaren'
GROUP BY R.YEAR
ORDER BY R.YEAR;



--Which circuits/countries has McLaren dominated most (most wins)?
SELECT C.NAME AS CIRCUIT_NAME,
        C.COUNTRY, 
        COUNT(*) AS MCLAREN_WINS
FROM RESULTS RE
JOIN RACES R
ON RE.RACEID = R.RACEID
JOIN CIRCUITS C
ON R.CIRCUITID = C.CIRCUITID
JOIN CONSTRUCTORS CON
ON RE.CONSTRUCTORID = CON.CONSTRUCTORID
WHERE CON.NAME = 'McLaren' AND RE.POSITION = 1
GROUP BY C.NAME, C.COUNTRY 
ORDER BY MCLAREN_WINS DESC 



-- How often did McLaren drivers set the fastest lap in a race?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    COUNT(*) AS fastest_laps
FROM LAP_TIMES lt
JOIN RESULTS res ON lt.RACEID = res.RACEID AND lt.DRIVERID = res.DRIVERID
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
WHERE LOWER(c.NAME) = 'mclaren'
  AND (lt.RACEID, lt.MILLISECONDS) IN (
      SELECT RACEID, MIN(MILLISECONDS)
      FROM LAP_TIMES
      GROUP BY RACEID
  )
GROUP BY driver_name
ORDER BY fastest_laps DESC;



--How often are McLaren drivers starting on the front row (GRID = 1 or 2)?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    COUNT(*) AS front_row_starts
FROM RESULTS res
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
WHERE 
    LOWER(c.NAME) = 'mclaren'
    AND res.GRID IN (1, 2)
GROUP BY driver_name
ORDER BY front_row_starts DESC;



-- --What is the correlation between starting position and final position for McLaren?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    AVG(res.GRID) AS avg_start_position,
    AVG(res.POSITION) AS avg_finish_position,
    CORR(res.GRID, res.POSITION) AS grid_position_correlation
FROM RESULTS res
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
WHERE 
    LOWER(c.NAME) = 'mclaren'
    AND res.GRID IS NOT NULL
    AND res.POSITION IS NOT NULL
GROUP BY driver_name
ORDER BY grid_position_correlation;



--Do McLaren drivers complete more laps on average than others?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    LOWER(c.NAME) = 'mclaren' AS is_mclaren_driver,
    COUNT(DISTINCT lt.RACEID) AS races_participated,
    COUNT(*) AS total_laps_completed,
    ROUND(COUNT(*) * 1.0 / COUNT(DISTINCT lt.RACEID), 2) AS avg_laps_per_race
FROM LAP_TIMES lt
JOIN DRIVERS d ON lt.DRIVERID = d.DRIVERID
JOIN RESULTS r ON lt.RACEID = r.RACEID AND lt.DRIVERID = r.DRIVERID
JOIN CONSTRUCTORS c ON r.CONSTRUCTORID = c.CONSTRUCTORID
WHERE lt.MILLISECONDS IS NOT NULL
GROUP BY driver_name, is_mclaren_driver
ORDER BY avg_laps_per_race DESC;



--Which McLaren driver has the most podium finishes (positions 1–3)?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    SUM(CASE WHEN res.POSITION = 1 THEN 1 ELSE 0 END) AS first_places,
    SUM(CASE WHEN res.POSITION = 2 THEN 1 ELSE 0 END) AS second_places,
    SUM(CASE WHEN res.POSITION = 3 THEN 1 ELSE 0 END) AS third_places,
    COUNT(*) AS total_podiums
FROM RESULTS res
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
WHERE 
    LOWER(c.NAME) = 'mclaren'
    AND res.POSITION IN (1, 2, 3)
GROUP BY driver_name
ORDER BY total_podiums DESC
LIMIT 1;



--What is McLaren’ driver lineup per year and how consistent has it been?
SELECT 
    ra.YEAR AS race_year,
    d.FORENAME || ' ' || d.SURNAME AS driver_name
FROM RESULTS res
JOIN RACES ra ON res.RACEID = ra.RACEID
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
WHERE LOWER(c.NAME) = 'mclaren'
GROUP BY ra.YEAR, driver_name
ORDER BY ra.YEAR, driver_name;



--How many races has McLaren failed to finish (DNFs)?
SELECT 
    d.FORENAME || ' ' || d.SURNAME AS driver_name,
    COUNT(*) AS dnf_count
FROM RESULTS res
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN DRIVERS d ON res.DRIVERID = d.DRIVERID
JOIN STATUS s ON res.STATUSID = s.STATUSID
WHERE 
    LOWER(c.NAME) = 'mclaren'
    AND LOWER(s.STATUS) NOT IN ('finished', '1 lap', '2 laps', '3 laps') 
GROUP BY driver_name

UNION ALL

SELECT 
    'TOTAL' AS driver_name,
    COUNT(*) AS dnf_count
FROM RESULTS res
JOIN CONSTRUCTORS c ON res.CONSTRUCTORID = c.CONSTRUCTORID
JOIN STATUS s ON res.STATUSID = s.STATUSID
WHERE 
    LOWER(c.NAME) = 'mclaren'
    AND LOWER(s.STATUS) NOT IN ('finished', '1 lap', '2 laps', '3 laps')
ORDER BY dnf_count DESC;





--SELECT  CON.NAME AS CONSTRUCTOR_NAME,
--		--CONCAT(D.FORENAME, ' ',D.SURNAME), 
--		RE.POSITION AS STARTING_POSITION,
--		RE.POINTS,
--		RE.LAPS,
--		RE.MILLISECONDS AS TIME_IN_MILLISECONDS,
--		R.DATE,
--		R.NAME AS RACE_NAME,
--		R.ROUND,
--		C.CIRCUITREF,
--		C.NAME AS CIRCUIT_NAME,
--		C.LOCATION,
--		C.COUNTRY,
--		S.YEAR AS SEASON
--FROM RESULTS RE
--LEFT JOIN CONSTRUCTORS CON
--ON RE.CONSTRUCTORID = CON.CONSTRUCTORID
--LEFT JOIN DRIVERS D
--ON RE.DRIVERID = D.DRIVERID
--LEFT JOIN RACES R
--ON RE.RACEID = R.RACEID
--LEFT JOIN CIRCUITS C
--ON R.CIRCUITID = C.CIRCUITID
--LEFT JOIN SEASONS S
--ON R.YEAR = S.YEAR
--ORDER BY S.YEAR, R.ROUND


